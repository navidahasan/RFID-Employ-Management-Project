/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.arduinoapp;

import javax.swing.ImageIcon;
import java.awt.Image;
import java.io.IOException;
import java.io.InputStream;
import com.fazecast.jSerialComm.*;
import java.util.Date;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.embed.swing.JFXPanel;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;

/**
 *
 * @author VUBO
 */
public class ArduinoAppUI extends javax.swing.JFrame {

    //static ArduinoSerialMonitor test = new ArduinoSerialMonitor();
    static DATABASE_ yo = new DATABASE_();
    static SerialPort serialPort = SerialPort.getCommPort("COM18");
    static String same = "";
    static Thread threadToInterrupt = null;
    static InputStream inn = null;
    static ArduinoAppUI app = null;
    static boolean available = false;

    /**
     * Creates new form ArduinoAppUI
     */
    public ArduinoAppUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        try {
            jLabel10 =(javax.swing.JLabel)java.beans.Beans.instantiate(getClass().getClassLoader(), "my/arduinoapp.ArduinoAppUI_jLabel10");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ArduinoApp");

        jLabel1.setText("Currently trying at");

        jLabel2.setText((serialPort == null) ? "Connecting To Device..." : "Device Connection Established");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Serial Monitor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N

        jLabel4.setText("ID: ");

        jLabel5.setText("Name: ");

        jLabel7.setText("Department: ");

        jLabel8.setText("Date: ");

        jLabel9.setText("Logout Time: ");

        jLabel13.setText("Login Time: ");

        jLabel3.setIcon(new ImageIcon(new ImageIcon(this.getClass().getResource("/default.jpg")).getImage().getScaledInstance(171, 171, Image.SCALE_SMOOTH)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel16))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jButton1.setText("Try again");
        jButton1.setFocusPainted(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel6.setText((serialPort == null) ? "No source found" : serialPort.getSystemPortName());
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel17.setText("Connecting Database...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (serialPort != null) {
            jButton1.setEnabled(false);
            try {
                TimeUnit.SECONDS.sleep(1);
            } catch (InterruptedException ex) {
                Logger.getLogger(ArduinoAppUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            jButton1.setEnabled(true);
        } else {
            if (threadToInterrupt != null) {
                threadToInterrupt.interrupt();
            }

            //serialPort = test.initialize();
            jLabel6.setText((serialPort == null) ? "No source found" : serialPort.getSystemPortName());
            jLabel2.setText((serialPort == null) ? "Connecting To Device..." : "Device Connection Established");
            if (serialPort != null) {
                try {
                    inn = serialPort.getInputStream();
                } catch (Exception e) {
                    System.out.println(e);
                }

                threadToInterrupt = (new Thread(new SerialReader(inn)));
                threadToInterrupt.start();
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked
    /**
     *
     */
    public static class SerialReader implements Runnable {

        InputStream in;
        String t = "";

        public SerialReader(InputStream in) {
            this.in = in;
        }

        public void run() {
            try {
                while (true) {
                    t = (char) in.read()+"";
                    System.out.print(t);
                    //app.con(t);
                }
                //in.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            serialPort.closePort();
        }
    }

    /**
     *
     */
    public static class DB_ implements Runnable {

        public DB_() {

        }

        public void run() {
            try {
                while (true) {
                    if (!yo.connection) {
                        System.out.println("Check Database Connection!");
                        if (app != null) {
                            app.jL("Check Database Connection!");
                        }
                        yo = new DATABASE_();
                    } else {
                        //System.out.println("Database Connected");
                        if (app != null) {
                            app.jL("Database Connected");
                        }
                    }
                }

            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }

    private void jL(String g) {
        jLabel17.setText(g);
    }

    private void con(String idd) {
        // TODO add your handling code here:
        //System.out.println(id);
        if (!same.equals(idd)) {
            //if (true) {
            same = idd;
            Date now = new Date();
            String[] parts = (new SimpleDateFormat("dd/MM/yyyy HH:mm:ss a")).format(now).split(" ", 2);
            String id = idd + " " + parts[0];
            //id = id + " " + "09/06/2016";
            try {
                String l_out = "";
                String l_in = "";
                String today = "";
                ResultSet ID = yo.readDataBase(id);
                while (true) {
                    if (ID.next()) {
                        jLabel3.setIcon(new ImageIcon(new ImageIcon(this.getClass().getResource((ID.getString("employee_photo").equals("")) ? "/default.jpg" : "/" + ID.getString("employee_photo"))).getImage().getScaledInstance(171, 171, Image.SCALE_SMOOTH)));
                        jLabel10.setText(ID.getString("login_id"));
                        jLabel11.setText(ID.getString("employee_firstname") + " " + ID.getString("employee_lastname"));
                        jLabel12.setText(ID.getString("employee_department"));
                        l_out = ID.getString("logout_time");
                        l_in = ID.getString("login_time");
                        today = ID.getString("service_date");
                        jLabel14.setText((ID.getString("login_time") == null) ? parts[1] : ID.getString("login_time"));
                        jLabel15.setText((ID.getString("service_date") == null) ? parts[0] : ID.getString("service_date"));
                        jLabel16.setText((l_in != null) ? (l_out.equals("")) ? parts[1] : l_out : "- - : - - : - -");
                        if ((l_in != null) && (l_out.equals(""))) {
                            System.out.println(yo);
                            id = id + " " + parts[1] + " out";
                            yo.writeDataBase(id);
                        }

                    } else {
                        if (!today.equals(parts[0])) {
                            id = id + " " + parts[1] + " in";
                            available = yo.writeDataBase(id);
                            if (!available) {
                                //new MediaPlayer(new Media("" + this.getClass().getResource("/bip.mp3"))).play();
                                jLabel3.setIcon(new ImageIcon(new ImageIcon(this.getClass().getResource("/alert.jpg")).getImage().getScaledInstance(171, 171, Image.SCALE_SMOOTH)));
                                jLabel10.setText(idd);
                                jLabel11.setText("no record found");
                                jLabel12.setText("no record found");
                                jLabel14.setText("- - : - - : - -");
                                jLabel15.setText("- - / - - / - -");
                                jLabel16.setText("- - : - - : - -");
                                //test.sendData("n");
                                break;
                            }
                            try {
                                ID = yo.readDataBase(idd + " " + parts[0]);
                                while (ID.next()) {
                                    jLabel3.setIcon(new ImageIcon(new ImageIcon(this.getClass().getResource((ID.getString("employee_photo").equals("")) ? "/default.jpg" : "/" + ID.getString("employee_photo"))).getImage().getScaledInstance(171, 171, Image.SCALE_SMOOTH)));
                                    jLabel10.setText(ID.getString("login_id"));
                                    jLabel11.setText(ID.getString("employee_firstname") + " " + ID.getString("employee_lastname"));
                                    jLabel12.setText(ID.getString("employee_department"));
                                    jLabel14.setText(ID.getString("login_time"));
                                    jLabel15.setText(ID.getString("service_date"));
                                    jLabel16.setText("- - : - - : - -");
                                }

                            } catch (Exception e) {
                                System.out.println(e);
                            }
                        }
                        //System.out.println("no record found");
                        break;
                    }
                }
            } catch (Exception e) {
                System.out.println(e);
                //check db con
            }
        }

    }

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        serialPort.openPort();
        serialPort.setComPortTimeouts(SerialPort.TIMEOUT_READ_SEMI_BLOCKING, 100, 0);
        inn = serialPort.getInputStream();

//        (new Thread(new SerialWriter(out))).start();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArduinoAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArduinoAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArduinoAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArduinoAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFXPanel();
                app = new ArduinoAppUI();
                app.setVisible(true);
            }
        });

        Thread jdb = (new Thread(new DB_()));
        jdb.start();

        if (serialPort != null) {
            inn = serialPort.getInputStream();
//        OutputStream out = serialPort.getOutputStream();
            threadToInterrupt = (new Thread(new SerialReader(inn)));
            threadToInterrupt.start();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
